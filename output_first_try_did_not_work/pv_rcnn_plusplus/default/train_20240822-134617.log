2024-08-22 13:46:17,297   INFO  **********************Start logging**********************
2024-08-22 13:46:17,297   INFO  CUDA_VISIBLE_DEVICES=1
2024-08-22 13:46:17,297   INFO  Training in distributed mode : total_batch_size: 6
2024-08-22 13:46:17,297   INFO  cfg_file         /space/userfiles/khatouna/OpenPCdet_FS_DA/tools/cfgs/FS_models/pv_rcnn_plusplus.yaml
2024-08-22 13:46:17,297   INFO  batch_size       6
2024-08-22 13:46:17,298   INFO  epochs           80
2024-08-22 13:46:17,298   INFO  workers          4
2024-08-22 13:46:17,298   INFO  extra_tag        default
2024-08-22 13:46:17,298   INFO  ckpt             None
2024-08-22 13:46:17,298   INFO  pretrained_model None
2024-08-22 13:46:17,298   INFO  launcher         pytorch
2024-08-22 13:46:17,298   INFO  tcp_port         18888
2024-08-22 13:46:17,298   INFO  sync_bn          False
2024-08-22 13:46:17,298   INFO  fix_random_seed  False
2024-08-22 13:46:17,298   INFO  ckpt_save_interval 1
2024-08-22 13:46:17,298   INFO  local_rank       0
2024-08-22 13:46:17,298   INFO  max_ckpt_save_num 30
2024-08-22 13:46:17,298   INFO  merge_all_iters_to_one_epoch False
2024-08-22 13:46:17,298   INFO  set_cfgs         None
2024-08-22 13:46:17,298   INFO  max_waiting_mins 0
2024-08-22 13:46:17,298   INFO  start_epoch      0
2024-08-22 13:46:17,298   INFO  num_epochs_to_eval 0
2024-08-22 13:46:17,298   INFO  save_to_file     False
2024-08-22 13:46:17,298   INFO  use_tqdm_to_record False
2024-08-22 13:46:17,298   INFO  logger_iter_interval 50
2024-08-22 13:46:17,298   INFO  ckpt_save_time_interval 300
2024-08-22 13:46:17,298   INFO  wo_gpu_stat      False
2024-08-22 13:46:17,298   INFO  use_amp          False
2024-08-22 13:46:17,298   INFO  cfg.ROOT_DIR: /space/userfiles/khatouna/OpenPCdet_FS_DA
2024-08-22 13:46:17,298   INFO  cfg.LOCAL_RANK: 0
2024-08-22 13:46:17,298   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Bike']
2024-08-22 13:46:17,298   INFO  ----------- DATA_CONFIG -----------
2024-08-22 13:46:17,298   INFO  cfg.DATA_CONFIG.DATASET: FourSeasonDataset
2024-08-22 13:46:17,299   INFO  cfg.DATA_CONFIG.DATA_PATH: /space/userfiles/khatouna/OpenPCDet_FS/data/fourseason/ImageSets/2023_late_summer
2024-08-22 13:46:17,299   INFO  cfg.DATA_CONFIG.PATH_LIDAR: /egr/research-canvas/four_seasons/dataset/2023_late_summer/oust
2024-08-22 13:46:17,299   INFO  cfg.DATA_CONFIG.PATH_LABEL: /egr/research-canvas/detection3d_datasets/four_seasons/imerit_check/label3d/2023_late_summer
2024-08-22 13:46:17,299   INFO  cfg.DATA_CONFIG.DATA_PATH_T: /space/userfiles/khatouna/OpenPCDet_FS/data/fourseason/ImageSets/2022_rain
2024-08-22 13:46:17,299   INFO  cfg.DATA_CONFIG.PATH_LIDAR_T: /egr/research-canvas/four_seasons/dataset/2022_rain/oust
2024-08-22 13:46:17,299   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [-75.2, -75.2, -4, 75.2, 75.2, 2]
2024-08-22 13:46:17,299   INFO  ----------- INFO_PATH -----------
2024-08-22 13:46:17,299   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['fs_infos_train.pkl']
2024-08-22 13:46:17,299   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['fs_infos_val.pkl']
2024-08-22 13:46:17,299   INFO  ----------- DATA_SPLIT -----------
2024-08-22 13:46:17,299   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2024-08-22 13:46:17,299   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2024-08-22 13:46:17,299   INFO  ----------- SAMPLED_INTERVAL -----------
2024-08-22 13:46:17,299   INFO  cfg.DATA_CONFIG.SAMPLED_INTERVAL.train: 5
2024-08-22 13:46:17,299   INFO  cfg.DATA_CONFIG.SAMPLED_INTERVAL.test: 1
2024-08-22 13:46:17,299   INFO  ----------- DATA_AUGMENTOR -----------
2024-08-22 13:46:17,299   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['place_holder']
2024-08-22 13:46:17,299   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'GROUND_HEIGHT': -1.95, 'DB_INFO_PATH': ['/space/userfiles/khatouna/OpenPCDet_FS/data/fourseason/ImageSets/2023_late_summer/fs_dbinfos_train_sampled_1.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Bike:5']}, 'SAMPLE_GROUPS': ['Car:20', 'Pedestrian:15', 'Bike:15'], 'NUM_POINT_FEATURES': 3, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.2, 0.2, 0.2], 'LIMIT_WHOLE_SCENE': True}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x', 'y']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.99, 1.01]}]
2024-08-22 13:46:17,299   INFO  ----------- POINT_FEATURE_ENCODING -----------
2024-08-22 13:46:17,299   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2024-08-22 13:46:17,299   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z']
2024-08-22 13:46:17,299   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z']
2024-08-22 13:46:17,299   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True, 'REMOVE_OUTSIDE_FOV': True, 'MIN_POINTS_OF_GT': 5}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.1, 0.1, 0.15], 'MAX_POINTS_PER_VOXEL': 5, 'MAX_NUMBER_OF_VOXELS': {'train': 80000, 'test': 90000}}]
2024-08-22 13:46:17,299   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: /space/userfiles/khatouna/OpenPCdet_FS_DA/tools/cfgs/dataset_configs/fourseason_dataset.yaml
2024-08-22 13:46:17,299   INFO  ----------- MODEL -----------
2024-08-22 13:46:17,300   INFO  cfg.MODEL.NAME: PVRCNNPlusPlus
2024-08-22 13:46:17,300   INFO  ----------- VFE -----------
2024-08-22 13:46:17,300   INFO  cfg.MODEL.VFE.NAME: MeanVFE
2024-08-22 13:46:17,300   INFO  ----------- BACKBONE_3D -----------
2024-08-22 13:46:17,300   INFO  cfg.MODEL.BACKBONE_3D.NAME: VoxelBackBone8x
2024-08-22 13:46:17,300   INFO  ----------- MAP_TO_BEV -----------
2024-08-22 13:46:17,300   INFO  cfg.MODEL.MAP_TO_BEV.NAME: HeightCompression
2024-08-22 13:46:17,300   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 256
2024-08-22 13:46:17,300   INFO  ----------- BACKBONE_2D -----------
2024-08-22 13:46:17,300   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2024-08-22 13:46:17,300   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [5, 5]
2024-08-22 13:46:17,300   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [1, 2]
2024-08-22 13:46:17,300   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [128, 256]
2024-08-22 13:46:17,300   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2]
2024-08-22 13:46:17,300   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [256, 256]
2024-08-22 13:46:17,300   INFO  ----------- DENSE_HEAD -----------
2024-08-22 13:46:17,300   INFO  cfg.MODEL.DENSE_HEAD.NAME: CenterHead
2024-08-22 13:46:17,300   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2024-08-22 13:46:17,300   INFO  cfg.MODEL.DENSE_HEAD.CLASS_NAMES_EACH_HEAD: [['Car', 'Pedestrian', 'Bike']]
2024-08-22 13:46:17,300   INFO  cfg.MODEL.DENSE_HEAD.SHARED_CONV_CHANNEL: 64
2024-08-22 13:46:17,300   INFO  cfg.MODEL.DENSE_HEAD.USE_BIAS_BEFORE_NORM: True
2024-08-22 13:46:17,300   INFO  cfg.MODEL.DENSE_HEAD.NUM_HM_CONV: 2
2024-08-22 13:46:17,300   INFO  ----------- SEPARATE_HEAD_CFG -----------
2024-08-22 13:46:17,300   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_ORDER: ['center', 'center_z', 'dim', 'rot']
2024-08-22 13:46:17,300   INFO  ----------- HEAD_DICT -----------
2024-08-22 13:46:17,300   INFO  ----------- center -----------
2024-08-22 13:46:17,300   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.center.out_channels: 2
2024-08-22 13:46:17,300   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.center.num_conv: 2
2024-08-22 13:46:17,301   INFO  ----------- center_z -----------
2024-08-22 13:46:17,301   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.center_z.out_channels: 1
2024-08-22 13:46:17,301   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.center_z.num_conv: 2
2024-08-22 13:46:17,301   INFO  ----------- dim -----------
2024-08-22 13:46:17,301   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.dim.out_channels: 3
2024-08-22 13:46:17,301   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.dim.num_conv: 2
2024-08-22 13:46:17,301   INFO  ----------- rot -----------
2024-08-22 13:46:17,301   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.rot.out_channels: 2
2024-08-22 13:46:17,301   INFO  cfg.MODEL.DENSE_HEAD.SEPARATE_HEAD_CFG.HEAD_DICT.rot.num_conv: 2
2024-08-22 13:46:17,301   INFO  ----------- TARGET_ASSIGNER_CONFIG -----------
2024-08-22 13:46:17,301   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.FEATURE_MAP_STRIDE: 8
2024-08-22 13:46:17,301   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NUM_MAX_OBJS: 500
2024-08-22 13:46:17,301   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.GAUSSIAN_OVERLAP: 0.1
2024-08-22 13:46:17,301   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MIN_RADIUS: 2
2024-08-22 13:46:17,301   INFO  ----------- LOSS_CONFIG -----------
2024-08-22 13:46:17,301   INFO  ----------- LOSS_WEIGHTS -----------
2024-08-22 13:46:17,301   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2024-08-22 13:46:17,301   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2024-08-22 13:46:17,301   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2024-08-22 13:46:17,301   INFO  ----------- POST_PROCESSING -----------
2024-08-22 13:46:17,301   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.SCORE_THRESH: 0.1
2024-08-22 13:46:17,301   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.POST_CENTER_LIMIT_RANGE: [-75.2, -75.2, -2, 75.2, 75.2, 4]
2024-08-22 13:46:17,301   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.MAX_OBJ_PER_SAMPLE: 500
2024-08-22 13:46:17,301   INFO  ----------- NMS_CONFIG -----------
2024-08-22 13:46:17,301   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2024-08-22 13:46:17,301   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.7
2024-08-22 13:46:17,302   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2024-08-22 13:46:17,302   INFO  cfg.MODEL.DENSE_HEAD.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2024-08-22 13:46:17,302   INFO  ----------- PFE -----------
2024-08-22 13:46:17,302   INFO  cfg.MODEL.PFE.NAME: VoxelSetAbstraction
2024-08-22 13:46:17,302   INFO  cfg.MODEL.PFE.POINT_SOURCE: raw_points
2024-08-22 13:46:17,302   INFO  cfg.MODEL.PFE.NUM_KEYPOINTS: 4096
2024-08-22 13:46:17,302   INFO  cfg.MODEL.PFE.NUM_OUTPUT_FEATURES: 90
2024-08-22 13:46:17,302   INFO  cfg.MODEL.PFE.SAMPLE_METHOD: SPC
2024-08-22 13:46:17,302   INFO  ----------- SPC_SAMPLING -----------
2024-08-22 13:46:17,302   INFO  cfg.MODEL.PFE.SPC_SAMPLING.NUM_SECTORS: 6
2024-08-22 13:46:17,302   INFO  cfg.MODEL.PFE.SPC_SAMPLING.SAMPLE_RADIUS_WITH_ROI: 1.6
2024-08-22 13:46:17,302   INFO  cfg.MODEL.PFE.FEATURES_SOURCE: ['bev', 'x_conv3', 'x_conv4', 'raw_points']
2024-08-22 13:46:17,302   INFO  ----------- SA_LAYER -----------
2024-08-22 13:46:17,302   INFO  ----------- raw_points -----------
2024-08-22 13:46:17,302   INFO  cfg.MODEL.PFE.SA_LAYER.raw_points.NAME: VectorPoolAggregationModuleMSG
2024-08-22 13:46:17,302   INFO  cfg.MODEL.PFE.SA_LAYER.raw_points.NUM_GROUPS: 2
2024-08-22 13:46:17,302   INFO  cfg.MODEL.PFE.SA_LAYER.raw_points.LOCAL_AGGREGATION_TYPE: local_interpolation
2024-08-22 13:46:17,302   INFO  cfg.MODEL.PFE.SA_LAYER.raw_points.NUM_REDUCED_CHANNELS: 3
2024-08-22 13:46:17,302   INFO  cfg.MODEL.PFE.SA_LAYER.raw_points.NUM_CHANNELS_OF_LOCAL_AGGREGATION: 32
2024-08-22 13:46:17,302   INFO  cfg.MODEL.PFE.SA_LAYER.raw_points.MSG_POST_MLPS: [32]
2024-08-22 13:46:17,302   INFO  cfg.MODEL.PFE.SA_LAYER.raw_points.FILTER_NEIGHBOR_WITH_ROI: True
2024-08-22 13:46:17,302   INFO  cfg.MODEL.PFE.SA_LAYER.raw_points.RADIUS_OF_NEIGHBOR_WITH_ROI: 2.4
2024-08-22 13:46:17,302   INFO  ----------- GROUP_CFG_0 -----------
2024-08-22 13:46:17,302   INFO  cfg.MODEL.PFE.SA_LAYER.raw_points.GROUP_CFG_0.NUM_LOCAL_VOXEL: [2, 2, 2]
2024-08-22 13:46:17,302   INFO  cfg.MODEL.PFE.SA_LAYER.raw_points.GROUP_CFG_0.MAX_NEIGHBOR_DISTANCE: 0.2
2024-08-22 13:46:17,302   INFO  cfg.MODEL.PFE.SA_LAYER.raw_points.GROUP_CFG_0.NEIGHBOR_NSAMPLE: -1
2024-08-22 13:46:17,302   INFO  cfg.MODEL.PFE.SA_LAYER.raw_points.GROUP_CFG_0.POST_MLPS: [32, 32]
2024-08-22 13:46:17,302   INFO  ----------- GROUP_CFG_1 -----------
2024-08-22 13:46:17,302   INFO  cfg.MODEL.PFE.SA_LAYER.raw_points.GROUP_CFG_1.NUM_LOCAL_VOXEL: [3, 3, 3]
2024-08-22 13:46:17,303   INFO  cfg.MODEL.PFE.SA_LAYER.raw_points.GROUP_CFG_1.MAX_NEIGHBOR_DISTANCE: 0.4
2024-08-22 13:46:17,303   INFO  cfg.MODEL.PFE.SA_LAYER.raw_points.GROUP_CFG_1.NEIGHBOR_NSAMPLE: -1
2024-08-22 13:46:17,303   INFO  cfg.MODEL.PFE.SA_LAYER.raw_points.GROUP_CFG_1.POST_MLPS: [32, 32]
2024-08-22 13:46:17,303   INFO  ----------- x_conv3 -----------
2024-08-22 13:46:17,303   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv3.DOWNSAMPLE_FACTOR: 4
2024-08-22 13:46:17,303   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv3.INPUT_CHANNELS: 64
2024-08-22 13:46:17,303   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv3.NAME: VectorPoolAggregationModuleMSG
2024-08-22 13:46:17,303   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv3.NUM_GROUPS: 2
2024-08-22 13:46:17,303   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv3.LOCAL_AGGREGATION_TYPE: local_interpolation
2024-08-22 13:46:17,303   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv3.NUM_REDUCED_CHANNELS: 32
2024-08-22 13:46:17,303   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv3.NUM_CHANNELS_OF_LOCAL_AGGREGATION: 32
2024-08-22 13:46:17,303   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv3.MSG_POST_MLPS: [128]
2024-08-22 13:46:17,303   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv3.FILTER_NEIGHBOR_WITH_ROI: True
2024-08-22 13:46:17,303   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv3.RADIUS_OF_NEIGHBOR_WITH_ROI: 4.0
2024-08-22 13:46:17,303   INFO  ----------- GROUP_CFG_0 -----------
2024-08-22 13:46:17,303   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv3.GROUP_CFG_0.NUM_LOCAL_VOXEL: [3, 3, 3]
2024-08-22 13:46:17,303   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv3.GROUP_CFG_0.MAX_NEIGHBOR_DISTANCE: 1.2
2024-08-22 13:46:17,303   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv3.GROUP_CFG_0.NEIGHBOR_NSAMPLE: -1
2024-08-22 13:46:17,303   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv3.GROUP_CFG_0.POST_MLPS: [64, 64]
2024-08-22 13:46:17,303   INFO  ----------- GROUP_CFG_1 -----------
2024-08-22 13:46:17,303   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv3.GROUP_CFG_1.NUM_LOCAL_VOXEL: [3, 3, 3]
2024-08-22 13:46:17,303   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv3.GROUP_CFG_1.MAX_NEIGHBOR_DISTANCE: 2.4
2024-08-22 13:46:17,303   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv3.GROUP_CFG_1.NEIGHBOR_NSAMPLE: -1
2024-08-22 13:46:17,303   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv3.GROUP_CFG_1.POST_MLPS: [64, 64]
2024-08-22 13:46:17,303   INFO  ----------- x_conv4 -----------
2024-08-22 13:46:17,303   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv4.DOWNSAMPLE_FACTOR: 8
2024-08-22 13:46:17,303   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv4.INPUT_CHANNELS: 64
2024-08-22 13:46:17,304   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv4.NAME: VectorPoolAggregationModuleMSG
2024-08-22 13:46:17,304   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv4.NUM_GROUPS: 2
2024-08-22 13:46:17,304   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv4.LOCAL_AGGREGATION_TYPE: local_interpolation
2024-08-22 13:46:17,304   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv4.NUM_REDUCED_CHANNELS: 32
2024-08-22 13:46:17,304   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv4.NUM_CHANNELS_OF_LOCAL_AGGREGATION: 32
2024-08-22 13:46:17,304   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv4.MSG_POST_MLPS: [128]
2024-08-22 13:46:17,304   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv4.FILTER_NEIGHBOR_WITH_ROI: True
2024-08-22 13:46:17,304   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv4.RADIUS_OF_NEIGHBOR_WITH_ROI: 6.4
2024-08-22 13:46:17,304   INFO  ----------- GROUP_CFG_0 -----------
2024-08-22 13:46:17,304   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv4.GROUP_CFG_0.NUM_LOCAL_VOXEL: [3, 3, 3]
2024-08-22 13:46:17,304   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv4.GROUP_CFG_0.MAX_NEIGHBOR_DISTANCE: 2.4
2024-08-22 13:46:17,304   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv4.GROUP_CFG_0.NEIGHBOR_NSAMPLE: -1
2024-08-22 13:46:17,304   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv4.GROUP_CFG_0.POST_MLPS: [64, 64]
2024-08-22 13:46:17,304   INFO  ----------- GROUP_CFG_1 -----------
2024-08-22 13:46:17,304   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv4.GROUP_CFG_1.NUM_LOCAL_VOXEL: [3, 3, 3]
2024-08-22 13:46:17,304   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv4.GROUP_CFG_1.MAX_NEIGHBOR_DISTANCE: 4.8
2024-08-22 13:46:17,304   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv4.GROUP_CFG_1.NEIGHBOR_NSAMPLE: -1
2024-08-22 13:46:17,304   INFO  cfg.MODEL.PFE.SA_LAYER.x_conv4.GROUP_CFG_1.POST_MLPS: [64, 64]
2024-08-22 13:46:17,304   INFO  ----------- POINT_HEAD -----------
2024-08-22 13:46:17,304   INFO  cfg.MODEL.POINT_HEAD.NAME: PointHeadSimple
2024-08-22 13:46:17,304   INFO  cfg.MODEL.POINT_HEAD.CLS_FC: [256, 256]
2024-08-22 13:46:17,304   INFO  cfg.MODEL.POINT_HEAD.CLASS_AGNOSTIC: True
2024-08-22 13:46:17,304   INFO  cfg.MODEL.POINT_HEAD.USE_POINT_FEATURES_BEFORE_FUSION: True
2024-08-22 13:46:17,304   INFO  ----------- TARGET_CONFIG -----------
2024-08-22 13:46:17,304   INFO  cfg.MODEL.POINT_HEAD.TARGET_CONFIG.GT_EXTRA_WIDTH: [0.2, 0.2, 0.2]
2024-08-22 13:46:17,304   INFO  ----------- LOSS_CONFIG -----------
2024-08-22 13:46:17,304   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_REG: smooth-l1
2024-08-22 13:46:17,304   INFO  ----------- LOSS_WEIGHTS -----------
2024-08-22 13:46:17,304   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.point_cls_weight: 1.0
2024-08-22 13:46:17,304   INFO  ----------- ROI_HEAD -----------
2024-08-22 13:46:17,304   INFO  cfg.MODEL.ROI_HEAD.NAME: PVRCNNHeadBaseline
2024-08-22 13:46:17,305   INFO  cfg.MODEL.ROI_HEAD.CLASS_AGNOSTIC: True
2024-08-22 13:46:17,305   INFO  cfg.MODEL.ROI_HEAD.SHARED_FC: [256, 256]
2024-08-22 13:46:17,305   INFO  cfg.MODEL.ROI_HEAD.CLS_FC: [256, 256]
2024-08-22 13:46:17,305   INFO  cfg.MODEL.ROI_HEAD.REG_FC: [256, 256]
2024-08-22 13:46:17,305   INFO  cfg.MODEL.ROI_HEAD.DP_RATIO: 0.3
2024-08-22 13:46:17,305   INFO  ----------- NMS_CONFIG -----------
2024-08-22 13:46:17,305   INFO  ----------- TRAIN -----------
2024-08-22 13:46:17,305   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_TYPE: nms_gpu
2024-08-22 13:46:17,305   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.MULTI_CLASSES_NMS: False
2024-08-22 13:46:17,305   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_PRE_MAXSIZE: 9000
2024-08-22 13:46:17,305   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_POST_MAXSIZE: 512
2024-08-22 13:46:17,305   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_THRESH: 0.8
2024-08-22 13:46:17,305   INFO  ----------- TEST -----------
2024-08-22 13:46:17,305   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_TYPE: nms_gpu
2024-08-22 13:46:17,305   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.MULTI_CLASSES_NMS: False
2024-08-22 13:46:17,305   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_PRE_MAXSIZE: 1024
2024-08-22 13:46:17,305   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_POST_MAXSIZE: 100
2024-08-22 13:46:17,305   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_THRESH: 0.7
2024-08-22 13:46:17,305   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.SCORE_THRESH: 0.1
2024-08-22 13:46:17,305   INFO  ----------- ROI_GRID_POOL -----------
2024-08-22 13:46:17,305   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.GRID_SIZE: 6
2024-08-22 13:46:17,305   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.NAME: VectorPoolAggregationModuleMSG
2024-08-22 13:46:17,305   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.NUM_GROUPS: 2
2024-08-22 13:46:17,305   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.LOCAL_AGGREGATION_TYPE: voxel_random_choice
2024-08-22 13:46:17,305   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.NUM_REDUCED_CHANNELS: 30
2024-08-22 13:46:17,305   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.NUM_CHANNELS_OF_LOCAL_AGGREGATION: 32
2024-08-22 13:46:17,305   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.MSG_POST_MLPS: [128]
2024-08-22 13:46:17,305   INFO  ----------- GROUP_CFG_0 -----------
2024-08-22 13:46:17,305   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.GROUP_CFG_0.NUM_LOCAL_VOXEL: [3, 3, 3]
2024-08-22 13:46:17,305   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.GROUP_CFG_0.MAX_NEIGHBOR_DISTANCE: 0.8
2024-08-22 13:46:17,305   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.GROUP_CFG_0.NEIGHBOR_NSAMPLE: 32
2024-08-22 13:46:17,306   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.GROUP_CFG_0.POST_MLPS: [64, 64]
2024-08-22 13:46:17,306   INFO  ----------- GROUP_CFG_1 -----------
2024-08-22 13:46:17,306   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.GROUP_CFG_1.NUM_LOCAL_VOXEL: [3, 3, 3]
2024-08-22 13:46:17,306   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.GROUP_CFG_1.MAX_NEIGHBOR_DISTANCE: 1.6
2024-08-22 13:46:17,306   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.GROUP_CFG_1.NEIGHBOR_NSAMPLE: 32
2024-08-22 13:46:17,306   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.GROUP_CFG_1.POST_MLPS: [64, 64]
2024-08-22 13:46:17,306   INFO  ----------- TARGET_CONFIG -----------
2024-08-22 13:46:17,306   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.BOX_CODER: ResidualCoder
2024-08-22 13:46:17,306   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.ROI_PER_IMAGE: 128
2024-08-22 13:46:17,306   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.FG_RATIO: 0.5
2024-08-22 13:46:17,306   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.SAMPLE_ROI_BY_EACH_CLASS: True
2024-08-22 13:46:17,306   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_SCORE_TYPE: roi_iou
2024-08-22 13:46:17,306   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_FG_THRESH: 0.75
2024-08-22 13:46:17,306   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_BG_THRESH: 0.25
2024-08-22 13:46:17,306   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_BG_THRESH_LO: 0.1
2024-08-22 13:46:17,306   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.HARD_BG_RATIO: 0.8
2024-08-22 13:46:17,306   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.REG_FG_THRESH: 0.55
2024-08-22 13:46:17,306   INFO  ----------- LOSS_CONFIG -----------
2024-08-22 13:46:17,306   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.CLS_LOSS: BinaryCrossEntropy
2024-08-22 13:46:17,306   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.REG_LOSS: smooth-l1
2024-08-22 13:46:17,306   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.CORNER_LOSS_REGULARIZATION: True
2024-08-22 13:46:17,306   INFO  ----------- LOSS_WEIGHTS -----------
2024-08-22 13:46:17,306   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.rcnn_cls_weight: 1.0
2024-08-22 13:46:17,306   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.rcnn_reg_weight: 1.0
2024-08-22 13:46:17,306   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.rcnn_corner_weight: 1.0
2024-08-22 13:46:17,306   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2024-08-22 13:46:17,306   INFO  ----------- POST_PROCESSING -----------
2024-08-22 13:46:17,306   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2024-08-22 13:46:17,306   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.2
2024-08-22 13:46:17,307   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2024-08-22 13:46:17,307   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2024-08-22 13:46:17,307   INFO  ----------- NMS_CONFIG -----------
2024-08-22 13:46:17,307   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2024-08-22 13:46:17,307   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2024-08-22 13:46:17,307   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.1
2024-08-22 13:46:17,307   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2024-08-22 13:46:17,307   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2024-08-22 13:46:17,307   INFO  ----------- OPTIMIZATION -----------
2024-08-22 13:46:17,307   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 6
2024-08-22 13:46:17,307   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2024-08-22 13:46:17,307   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2024-08-22 13:46:17,307   INFO  cfg.OPTIMIZATION.LR: 0.01
2024-08-22 13:46:17,307   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.001
2024-08-22 13:46:17,307   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2024-08-22 13:46:17,307   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2024-08-22 13:46:17,307   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2024-08-22 13:46:17,307   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2024-08-22 13:46:17,307   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2024-08-22 13:46:17,307   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2024-08-22 13:46:17,307   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2024-08-22 13:46:17,307   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2024-08-22 13:46:17,307   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2024-08-22 13:46:17,307   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2024-08-22 13:46:17,307   INFO  cfg.TAG: pv_rcnn_plusplus
2024-08-22 13:46:17,307   INFO  cfg.EXP_GROUP_PATH: 
2024-08-22 13:46:17,322   INFO  ----------- Create dataloader & network & optimizer -----------
2024-08-22 13:46:17,359   INFO  Database filter by min points Car: 7724 => 7037
2024-08-22 13:46:17,362   INFO  Database filter by min points Pedestrian: 2067 => 1841
2024-08-22 13:46:17,363   INFO  Database filter by min points Bike: 601 => 504
2024-08-22 13:46:17,400   INFO  Database filter by min points Car: 7724 => 7037
2024-08-22 13:46:17,404   INFO  Database filter by min points Pedestrian: 2067 => 1841
2024-08-22 13:46:17,404   INFO  Database filter by min points Bike: 601 => 504
2024-08-22 13:46:17,406   INFO  Loading Fourseason dataset
2024-08-22 13:46:17,626   INFO  Total samples for Fourseason dataset: 2167
2024-08-22 13:46:17,627   INFO  Loading Fourseason dataset
2024-08-22 13:46:17,634   INFO  Total samples for Fourseason dataset: 2167
2024-08-22 13:46:17,823   INFO  ==> Loading parameters from checkpoint /space/userfiles/khatouna/OpenPCdet_FS_DA/output/pv_rcnn_plusplus/default/ckpt/latest_model.pth to CPU
2024-08-22 13:46:17,976   INFO  ==> Loading optimizer parameters from checkpoint /space/userfiles/khatouna/OpenPCdet_FS_DA/output/pv_rcnn_plusplus/default/ckpt/latest_model.pth to CPU
2024-08-22 13:46:17,999   INFO  ==> Done
2024-08-22 13:46:18,475   INFO  ----------- Model PVRCNNPlusPlus created, param count: 14114936 -----------
2024-08-22 13:46:18,475   INFO  DistributedDataParallel(
  (module): PVRCNNPlusPlus(
    (vfe): MeanVFE()
    (backbone_3d): VoxelBackBone8x(
      (conv_input): SparseSequential(
        (0): SubMConv3d(3, 16, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
        (1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (conv1): SparseSequential(
        (0): SparseSequential(
          (0): SubMConv3d(16, 16, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
      (conv2): SparseSequential(
        (0): SparseSequential(
          (0): SparseConv3d(16, 32, kernel_size=[3, 3, 3], stride=[2, 2, 2], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): SparseSequential(
          (0): SubMConv3d(32, 32, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): SparseSequential(
          (0): SubMConv3d(32, 32, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
      (conv3): SparseSequential(
        (0): SparseSequential(
          (0): SparseConv3d(32, 64, kernel_size=[3, 3, 3], stride=[2, 2, 2], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): SparseSequential(
          (0): SubMConv3d(64, 64, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): SparseSequential(
          (0): SubMConv3d(64, 64, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
      (conv4): SparseSequential(
        (0): SparseSequential(
          (0): SparseConv3d(64, 64, kernel_size=[3, 3, 3], stride=[2, 2, 2], padding=[0, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): SparseSequential(
          (0): SubMConv3d(64, 64, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): SparseSequential(
          (0): SubMConv3d(64, 64, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
      (conv_out): SparseSequential(
        (0): SparseConv3d(64, 128, kernel_size=[3, 1, 1], stride=[2, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
        (1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
    (map_to_bev_module): HeightCompression()
    (pfe): VoxelSetAbstraction(
      (SA_layers): ModuleList(
        (0): VectorPoolAggregationModuleMSG(
          (layer_0): VectorPoolAggregationModule(
            radius=1.2, local_voxels=([3, 3, 3], local_aggregation_type=local_interpolation, num_c_reduction=64->32, num_c_local_aggregation=32
            (local_interpolate_module): VectorPoolLocalInterpolateModule()
            (separate_local_aggregation_layer): Sequential(
              (0): Conv1d(1107, 864, kernel_size=(1,), stride=(1,), groups=27, bias=False)
              (1): BatchNorm1d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (post_mlps): Sequential(
              (0): Conv1d(864, 64, kernel_size=(1,), stride=(1,), bias=False)
              (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
              (3): Conv1d(64, 64, kernel_size=(1,), stride=(1,), bias=False)
              (4): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU()
            )
          )
          (layer_1): VectorPoolAggregationModule(
            radius=2.4, local_voxels=([3, 3, 3], local_aggregation_type=local_interpolation, num_c_reduction=64->32, num_c_local_aggregation=32
            (local_interpolate_module): VectorPoolLocalInterpolateModule()
            (separate_local_aggregation_layer): Sequential(
              (0): Conv1d(1107, 864, kernel_size=(1,), stride=(1,), groups=27, bias=False)
              (1): BatchNorm1d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (post_mlps): Sequential(
              (0): Conv1d(864, 64, kernel_size=(1,), stride=(1,), bias=False)
              (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
              (3): Conv1d(64, 64, kernel_size=(1,), stride=(1,), bias=False)
              (4): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU()
            )
          )
          (msg_post_mlps): Sequential(
            (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,), bias=False)
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
          )
        )
        (1): VectorPoolAggregationModuleMSG(
          (layer_0): VectorPoolAggregationModule(
            radius=2.4, local_voxels=([3, 3, 3], local_aggregation_type=local_interpolation, num_c_reduction=64->32, num_c_local_aggregation=32
            (local_interpolate_module): VectorPoolLocalInterpolateModule()
            (separate_local_aggregation_layer): Sequential(
              (0): Conv1d(1107, 864, kernel_size=(1,), stride=(1,), groups=27, bias=False)
              (1): BatchNorm1d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (post_mlps): Sequential(
              (0): Conv1d(864, 64, kernel_size=(1,), stride=(1,), bias=False)
              (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
              (3): Conv1d(64, 64, kernel_size=(1,), stride=(1,), bias=False)
              (4): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU()
            )
          )
          (layer_1): VectorPoolAggregationModule(
            radius=4.8, local_voxels=([3, 3, 3], local_aggregation_type=local_interpolation, num_c_reduction=64->32, num_c_local_aggregation=32
            (local_interpolate_module): VectorPoolLocalInterpolateModule()
            (separate_local_aggregation_layer): Sequential(
              (0): Conv1d(1107, 864, kernel_size=(1,), stride=(1,), groups=27, bias=False)
              (1): BatchNorm1d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (post_mlps): Sequential(
              (0): Conv1d(864, 64, kernel_size=(1,), stride=(1,), bias=False)
              (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
              (3): Conv1d(64, 64, kernel_size=(1,), stride=(1,), bias=False)
              (4): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU()
            )
          )
          (msg_post_mlps): Sequential(
            (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,), bias=False)
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
          )
        )
      )
      (SA_rawpoints): VectorPoolAggregationModuleMSG(
        (layer_0): VectorPoolAggregationModule(
          radius=0.2, local_voxels=([2, 2, 2], local_aggregation_type=local_interpolation, num_c_reduction=0->3, num_c_local_aggregation=32
          (local_interpolate_module): VectorPoolLocalInterpolateModule()
          (separate_local_aggregation_layer): Sequential(
            (0): Conv1d(96, 256, kernel_size=(1,), stride=(1,), groups=8, bias=False)
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (post_mlps): Sequential(
            (0): Conv1d(256, 32, kernel_size=(1,), stride=(1,), bias=False)
            (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
            (3): Conv1d(32, 32, kernel_size=(1,), stride=(1,), bias=False)
            (4): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU()
          )
        )
        (layer_1): VectorPoolAggregationModule(
          radius=0.4, local_voxels=([3, 3, 3], local_aggregation_type=local_interpolation, num_c_reduction=0->3, num_c_local_aggregation=32
          (local_interpolate_module): VectorPoolLocalInterpolateModule()
          (separate_local_aggregation_layer): Sequential(
            (0): Conv1d(324, 864, kernel_size=(1,), stride=(1,), groups=27, bias=False)
            (1): BatchNorm1d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (post_mlps): Sequential(
            (0): Conv1d(864, 32, kernel_size=(1,), stride=(1,), bias=False)
            (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
            (3): Conv1d(32, 32, kernel_size=(1,), stride=(1,), bias=False)
            (4): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU()
          )
        )
        (msg_post_mlps): Sequential(
          (0): Conv1d(67, 32, kernel_size=(1,), stride=(1,), bias=False)
          (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
      (vsa_point_feature_fusion): Sequential(
        (0): Linear(in_features=544, out_features=90, bias=False)
        (1): BatchNorm1d(90, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d((1, 1, 1, 1))
          (1): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d((1, 1, 1, 1))
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): CenterHead(
      (shared_conv): Sequential(
        (0): Conv2d(512, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (heads_list): ModuleList(
        (0): SeparateHead(
          (center): Sequential(
            (0): Sequential(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (center_z): Sequential(
            (0): Sequential(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (dim): Sequential(
            (0): Sequential(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (rot): Sequential(
            (0): Sequential(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (hm): Sequential(
            (0): Sequential(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU()
            )
            (1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
      )
      (hm_loss_func): FocalLossCenterNet()
      (reg_loss_func): RegLossCenterNet()
    )
    (point_head): PointHeadSimple(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (cls_layers): Sequential(
        (0): Linear(in_features=544, out_features=256, bias=False)
        (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
        (3): Linear(in_features=256, out_features=256, bias=False)
        (4): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU()
        (6): Linear(in_features=256, out_features=1, bias=True)
      )
    )
    (roi_head): PVRCNNHeadBaseline(
      (proposal_target_layer): ProposalTargetLayer()
      (reg_loss_func): WeightedSmoothL1Loss()
      (roi_grid_pool_layer): VectorPoolAggregationModuleMSG(
        (layer_0): VectorPoolAggregationModule(
          radius=0.8, local_voxels=([3, 3, 3], local_aggregation_type=voxel_random_choice, num_c_reduction=90->30, num_c_local_aggregation=32
          (separate_local_aggregation_layer): Sequential(
            (0): Conv1d(891, 864, kernel_size=(1,), stride=(1,), groups=27, bias=False)
            (1): BatchNorm1d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (post_mlps): Sequential(
            (0): Conv1d(864, 64, kernel_size=(1,), stride=(1,), bias=False)
            (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
            (3): Conv1d(64, 64, kernel_size=(1,), stride=(1,), bias=False)
            (4): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU()
          )
        )
        (layer_1): VectorPoolAggregationModule(
          radius=1.6, local_voxels=([3, 3, 3], local_aggregation_type=voxel_random_choice, num_c_reduction=90->30, num_c_local_aggregation=32
          (separate_local_aggregation_layer): Sequential(
            (0): Conv1d(891, 864, kernel_size=(1,), stride=(1,), groups=27, bias=False)
            (1): BatchNorm1d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (post_mlps): Sequential(
            (0): Conv1d(864, 64, kernel_size=(1,), stride=(1,), bias=False)
            (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
            (3): Conv1d(64, 64, kernel_size=(1,), stride=(1,), bias=False)
            (4): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU()
          )
        )
        (msg_post_mlps): Sequential(
          (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,), bias=False)
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
      (shared_fc_layer): Sequential(
        (0): Conv1d(27648, 256, kernel_size=(1,), stride=(1,), bias=False)
        (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
        (3): Dropout(p=0.3, inplace=False)
        (4): Conv1d(256, 256, kernel_size=(1,), stride=(1,), bias=False)
        (5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU()
      )
      (cls_layers): Sequential(
        (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,), bias=False)
        (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
        (3): Dropout(p=0.3, inplace=False)
        (4): Conv1d(256, 256, kernel_size=(1,), stride=(1,), bias=False)
        (5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU()
        (7): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      )
      (reg_layers): Sequential(
        (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,), bias=False)
        (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
        (3): Dropout(p=0.3, inplace=False)
        (4): Conv1d(256, 256, kernel_size=(1,), stride=(1,), bias=False)
        (5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU()
        (7): Conv1d(256, 7, kernel_size=(1,), stride=(1,))
      )
    )
  )
)
2024-08-22 13:46:18,481   INFO  **********************Start training /pv_rcnn_plusplus(default)**********************
2024-08-22 13:47:48,936   INFO  Train:   21/80 ( 26%) [ 125/362 ( 35%)]  Loss: 4.367 (4.37)  LR: 7.362e-03  Time cost: 00:31/2:03:08 [01:30/187:00:26]  Acc_iter 7366        Data time: 0.74(0.74)  Forward time: 30.44(30.44)  Batch time: 31.17(31.17)
2024-08-22 13:51:34,566   INFO  Train:   21/80 ( 26%) [ 159/362 ( 44%)]  Loss: 4.406 (4.25)  LR: 7.400e-03  Time cost: 04:16/24:49 [05:16/43:56:38]  Acc_iter 7400        Data time: 0.14(0.20)  Forward time: 6.71(7.13)  Batch time: 6.85(7.33)
2024-08-22 13:52:21,280   INFO  Save latest model to /space/userfiles/khatouna/OpenPCdet_FS_DA/output/pv_rcnn_plusplus/default/ckpt/latest_model
2024-08-22 13:57:02,573   INFO  Train:   21/80 ( 26%) [ 209/362 ( 58%)]  Loss: 4.593 (4.24)  LR: 7.455e-03  Time cost: 09:44/17:32 [10:44/41:06:38]  Acc_iter 7450        Data time: 0.22(0.21)  Forward time: 6.09(6.67)  Batch time: 6.31(6.88)
2024-08-22 13:57:24,121   INFO  Save latest model to /space/userfiles/khatouna/OpenPCdet_FS_DA/output/pv_rcnn_plusplus/default/ckpt/latest_model
2024-08-22 14:02:19,356   INFO  Save latest model to /space/userfiles/khatouna/OpenPCdet_FS_DA/output/pv_rcnn_plusplus/default/ckpt/latest_model
2024-08-22 14:02:33,044   INFO  Train:   21/80 ( 26%) [ 259/362 ( 72%)]  Loss: 4.301 (4.22)  LR: 7.510e-03  Time cost: 15:15/11:38 [16:14/40:25:02]  Acc_iter 7500        Data time: 0.20(0.21)  Forward time: 7.05(6.57)  Batch time: 7.25(6.78)
2024-08-22 14:02:33,133   INFO  
2024-08-22 14:07:20,098   INFO  Save latest model to /space/userfiles/khatouna/OpenPCdet_FS_DA/output/pv_rcnn_plusplus/default/ckpt/latest_model
2024-08-22 14:08:00,979   INFO  Train:   21/80 ( 26%) [ 309/362 ( 85%)]  Loss: 3.964 (4.23)  LR: 7.564e-03  Time cost: 20:43/05:56 [21:42/39:58:04]  Acc_iter 7550        Data time: 0.20(0.20)  Forward time: 6.64(6.51)  Batch time: 6.84(6.72)
2024-08-22 14:12:22,465   INFO  Save latest model to /space/userfiles/khatouna/OpenPCdet_FS_DA/output/pv_rcnn_plusplus/default/ckpt/latest_model
2024-08-22 14:13:33,331   INFO  Train:   21/80 ( 26%) [ 359/362 ( 99%)]  Loss: 4.076 (4.24)  LR: 7.618e-03  Time cost: 26:15/00:20 [27:14/39:46:55]  Acc_iter 7600        Data time: 0.22(0.20)  Forward time: 5.70(6.50)  Batch time: 5.92(6.70)
2024-08-22 14:13:46,865   INFO  Train:   21/80 ( 26%) [ 361/362 (100%)]  Loss: 4.388 (4.24)  LR: 7.620e-03  Time cost: 26:29/00:06 [27:28/39:46:53]  Acc_iter 7602        Data time: 0.20(0.20)  Forward time: 6.41(6.50)  Batch time: 6.61(6.70)
2024-08-22 14:14:28,622   INFO  Train:   22/80 ( 28%) [   0/362 (  0%)]  Loss: 3.950 (3.95)  LR: 7.621e-03  Time cost: 00:07/44:40 [28:10/43:55:48]  Acc_iter 7603        Data time: 0.86(0.86)  Forward time: 6.37(6.37)  Batch time: 7.23(7.23)
2024-08-22 14:19:22,113   INFO  Save latest model to /space/userfiles/khatouna/OpenPCdet_FS_DA/output/pv_rcnn_plusplus/default/ckpt/latest_model
2024-08-22 14:19:34,050   INFO  Train:   22/80 ( 28%) [  47/362 ( 13%)]  Loss: 4.449 (4.21)  LR: 7.672e-03  Time cost: 05:12/34:12 [33:15/38:34:51]  Acc_iter 7650        Data time: 0.20(0.22)  Forward time: 5.71(6.29)  Batch time: 5.91(6.51)
2024-08-22 14:19:34,179   INFO  
2024-08-22 14:24:25,613   INFO  Save latest model to /space/userfiles/khatouna/OpenPCdet_FS_DA/output/pv_rcnn_plusplus/default/ckpt/latest_model
2024-08-22 14:24:50,709   INFO  Train:   22/80 ( 28%) [  97/362 ( 27%)]  Loss: 4.044 (4.22)  LR: 7.725e-03  Time cost: 10:29/28:22 [38:32/37:56:07]  Acc_iter 7700        Data time: 0.18(0.22)  Forward time: 6.37(6.21)  Batch time: 6.55(6.42)
2024-08-22 14:29:24,572   INFO  Save latest model to /space/userfiles/khatouna/OpenPCdet_FS_DA/output/pv_rcnn_plusplus/default/ckpt/latest_model
2024-08-22 14:30:09,838   INFO  Train:   22/80 ( 28%) [ 147/362 ( 41%)]  Loss: 4.488 (4.22)  LR: 7.778e-03  Time cost: 15:48/22:58 [43:51/37:45:53]  Acc_iter 7750        Data time: 0.24(0.21)  Forward time: 6.58(6.20)  Batch time: 6.81(6.41)
2024-08-22 14:34:27,023   INFO  Save latest model to /space/userfiles/khatouna/OpenPCdet_FS_DA/output/pv_rcnn_plusplus/default/ckpt/latest_model
2024-08-22 14:35:25,846   INFO  Train:   22/80 ( 28%) [ 197/362 ( 54%)]  Loss: 4.376 (4.21)  LR: 7.830e-03  Time cost: 21:04/17:33 [49:07/37:32:35]  Acc_iter 7800        Data time: 0.22(0.21)  Forward time: 7.05(6.18)  Batch time: 7.26(6.39)
2024-08-22 14:35:26,067   INFO  
2024-08-22 14:39:25,797   INFO  Save latest model to /space/userfiles/khatouna/OpenPCdet_FS_DA/output/pv_rcnn_plusplus/default/ckpt/latest_model
2024-08-22 14:40:51,130   INFO  Train:   22/80 ( 28%) [ 247/362 ( 68%)]  Loss: 4.116 (4.21)  LR: 7.882e-03  Time cost: 26:29/12:17 [54:32/37:35:41]  Acc_iter 7850        Data time: 0.16(0.21)  Forward time: 5.89(6.20)  Batch time: 6.05(6.41)
2024-08-22 14:44:28,881   INFO  Save latest model to /space/userfiles/khatouna/OpenPCdet_FS_DA/output/pv_rcnn_plusplus/default/ckpt/latest_model
2024-08-22 14:46:44,356   INFO  Train:   22/80 ( 28%) [ 297/362 ( 82%)]  Loss: 4.381 (4.21)  LR: 7.934e-03  Time cost: 32:23/07:03 [1:00:25/38:08:50]  Acc_iter 7900        Data time: 0.16(0.21)  Forward time: 6.21(6.31)  Batch time: 6.37(6.52)
2024-08-22 14:49:26,296   INFO  Save latest model to /space/userfiles/khatouna/OpenPCdet_FS_DA/output/pv_rcnn_plusplus/default/ckpt/latest_model
2024-08-22 14:52:31,264   INFO  Train:   22/80 ( 28%) [ 347/362 ( 96%)]  Loss: 4.181 (4.21)  LR: 7.985e-03  Time cost: 38:10/01:38 [1:06:12/38:24:24]  Acc_iter 7950        Data time: 0.17(0.20)  Forward time: 6.57(6.38)  Batch time: 6.74(6.58)
2024-08-22 14:52:31,536   INFO  
2024-08-22 14:54:08,378   INFO  Train:   22/80 ( 28%) [ 361/362 (100%)]  Loss: 4.877 (4.21)  LR: 7.999e-03  Time cost: 39:47/00:06 [1:07:49/38:27:41]  Acc_iter 7964        Data time: 0.20(0.20)  Forward time: 6.33(6.39)  Batch time: 6.52(6.59)
2024-08-22 14:54:47,602   INFO  Train:   23/80 ( 29%) [   0/362 (  0%)]  Loss: 4.373 (4.37)  LR: 8.000e-03  Time cost: 00:08/48:44 [1:08:29/47:06:55]  Acc_iter 7965        Data time: 0.67(0.67)  Forward time: 7.21(7.21)  Batch time: 7.88(7.88)
2024-08-22 14:58:47,975   INFO  Train:   23/80 ( 29%) [  35/362 ( 10%)]  Loss: 4.626 (4.35)  LR: 8.035e-03  Time cost: 04:08/37:36 [1:12:29/40:11:00]  Acc_iter 8000        Data time: 0.18(0.21)  Forward time: 6.64(6.69)  Batch time: 6.82(6.90)
2024-08-22 14:59:46,110   INFO  Save latest model to /space/userfiles/khatouna/OpenPCdet_FS_DA/output/pv_rcnn_plusplus/default/ckpt/latest_model
2024-08-22 15:04:18,191   INFO  Train:   23/80 ( 29%) [  85/362 ( 23%)]  Loss: 3.946 (4.31)  LR: 8.086e-03  Time cost: 09:38/31:03 [1:17:59/39:05:03]  Acc_iter 8050        Data time: 0.16(0.20)  Forward time: 6.54(6.52)  Batch time: 6.69(6.73)
2024-08-22 15:04:45,165   INFO  Save latest model to /space/userfiles/khatouna/OpenPCdet_FS_DA/output/pv_rcnn_plusplus/default/ckpt/latest_model
2024-08-22 15:09:44,656   INFO  Train:   23/80 ( 29%) [ 135/362 ( 37%)]  Loss: 4.154 (4.26)  LR: 8.135e-03  Time cost: 15:05/25:10 [1:23:26/38:33:58]  Acc_iter 8100        Data time: 0.20(0.20)  Forward time: 6.18(6.45)  Batch time: 6.38(6.65)
2024-08-22 15:09:44,833   INFO  
2024-08-22 15:09:45,332   INFO  Save latest model to /space/userfiles/khatouna/OpenPCdet_FS_DA/output/pv_rcnn_plusplus/default/ckpt/latest_model
